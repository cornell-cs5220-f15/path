
Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at mt19937p.c(59,5) inlined into path-tiled.c(310,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between mt line 60 and mt line 60
LOOP END

LOOP BEGIN at mt19937p.c(59,5) inlined into path-tiled.c(310,14)
<Remainder>
LOOP END

LOOP BEGIN at path-tiled.c(90,3) inlined into path-tiled.c(310,14)
   remark #15527: loop was not vectorized: function call to _mm_malloc(size_t, size_t) cannot be vectorized   [ path-tiled.c(36,19) ]
LOOP END

LOOP BEGIN at path-tiled.c(249,3) inlined into path-tiled.c(310,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between mt line 78 and mt line 83
   remark #15346: vector dependence: assumed FLOW dependence between mt line 83 and mt line 78

   LOOP BEGIN at path-tiled.c(250,5) inlined into path-tiled.c(310,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between mt line 78 and mt line 83
      remark #15346: vector dependence: assumed FLOW dependence between mt line 83 and mt line 78

      LOOP BEGIN at mt19937p.c(77,9) inlined into path-tiled.c(310,14)
         remark #15388: vectorization support: reference mt has aligned access   [ mt19937p.c(78,13) ]
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(78,13) ]
         remark #15388: vectorization support: reference mt has aligned access   [ mt19937p.c(79,13) ]
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(79,13) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15458: masked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 12 
         remark #15477: vector loop cost: 22.500 
         remark #15478: estimated potential speedup: 0.530 
         remark #15479: lightweight vector operations: 25 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 2 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at mt19937p.c(77,9) inlined into path-tiled.c(310,14)
      <Remainder>
      LOOP END

      LOOP BEGIN at mt19937p.c(81,9) inlined into path-tiled.c(310,14)
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(82,13) ]
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(82,13) ]
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(83,13) ]
         remark #15389: vectorization support: reference mt has unaligned access   [ mt19937p.c(83,13) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15458: masked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 11 
         remark #15477: vector loop cost: 23.500 
         remark #15478: estimated potential speedup: 0.460 
         remark #15479: lightweight vector operations: 20 
         remark #15480: medium-overhead vector operations: 2 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at mt19937p.c(81,9) inlined into path-tiled.c(310,14)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(64,3) inlined into path-tiled.c(313,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between l line 66 and l line 69
   remark #15346: vector dependence: assumed OUTPUT dependence between l line 69 and l line 66

   LOOP BEGIN at path-tiled.c(65,5) inlined into path-tiled.c(313,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between l line 66 and l line 66
      remark #15346: vector dependence: assumed ANTI dependence between l line 66 and l line 66
   LOOP END

   LOOP BEGIN at path-tiled.c(65,5) inlined into path-tiled.c(313,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(51,3) inlined into path-tiled.c(315,15)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(52,5) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(53,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 52 and  line 53
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 53 and  line 52

   LOOP BEGIN at path-tiled.c(52,5) inlined into path-tiled.c(315,15)
      remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(78,3) inlined into path-tiled.c(323,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between l line 80 and l line 80
   remark #15346: vector dependence: assumed OUTPUT dependence between l line 80 and l line 80

   LOOP BEGIN at path-tiled.c(79,5) inlined into path-tiled.c(323,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between l line 80 and l line 80
      remark #15346: vector dependence: assumed ANTI dependence between l line 80 and l line 80
   LOOP END

   LOOP BEGIN at path-tiled.c(79,5) inlined into path-tiled.c(323,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(107,3) inlined into path-tiled.c(329,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at path-tiled.c(108,5) inlined into path-tiled.c(329,25)
   <Peeled>
   LOOP END

   LOOP BEGIN at path-tiled.c(108,5) inlined into path-tiled.c(329,25)
      remark #15388: vectorization support: reference l has aligned access   [ path-tiled.c(109,7) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 12 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 3.780 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at path-tiled.c(108,5) inlined into path-tiled.c(329,25)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(267,3) inlined into path-tiled.c(329,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between sum2 line 269 and sum2 line 269
   remark #15346: vector dependence: assumed FLOW dependence between sum2 line 269 and sum2 line 269
LOOP END

LOOP BEGIN at path-tiled.c(51,3) inlined into path-tiled.c(331,15)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(52,5) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(53,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 52 and  line 53
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 53 and  line 52

   LOOP BEGIN at path-tiled.c(52,5) inlined into path-tiled.c(331,15)
      remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(98,3) inlined into path-tiled.c(334,3)
   remark #15527: loop was not vectorized: function call to _mm_free(void *) cannot be vectorized   [ path-tiled.c(98,31) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at path-tiled.c(297,3)
   remark #15535: loop was not vectorized: loop contains switch statement. Consider using if-else statement.   [ path-tiled.c(298,5) ]
LOOP END
===========================================================================

Begin optimization report for: shortest_paths(const int, int **__restrict__)

    Report from: Vector optimizations [vec]


LOOP BEGIN at path-tiled.c(90,14) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_malloc(size_t, size_t) cannot be vectorized   [ path-tiled.c(36,19) ]
LOOP END

LOOP BEGIN at path-tiled.c(90,14) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_malloc(size_t, size_t) cannot be vectorized   [ path-tiled.c(36,19) ]
LOOP END

LOOP BEGIN at path-tiled.c(90,14) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_malloc(size_t, size_t) cannot be vectorized   [ path-tiled.c(36,19) ]
LOOP END

LOOP BEGIN at path-tiled.c(90,14) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_malloc(size_t, size_t) cannot be vectorized   [ path-tiled.c(36,19) ]
LOOP END

LOOP BEGIN at path-tiled.c(189,3) inlined into path-tiled.c(239,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at path-tiled.c(125,25) inlined into path-tiled.c(239,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between block line 125 and block line 125
      remark #15346: vector dependence: assumed OUTPUT dependence between block line 125 and block line 125

      LOOP BEGIN at path-tiled.c(125,25) inlined into path-tiled.c(239,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between c line 172 and c line 172
         remark #15346: vector dependence: assumed OUTPUT dependence between c line 172 and c line 172

         LOOP BEGIN at path-tiled.c(169,7) inlined into path-tiled.c(239,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 172 and c line 172
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 172 and c line 172

            LOOP BEGIN at path-tiled.c(170,9) inlined into path-tiled.c(239,3)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between c line 172 and c line 172
               remark #15346: vector dependence: assumed ANTI dependence between c line 172 and c line 172

               LOOP BEGIN at path-tiled.c(171,11) inlined into path-tiled.c(239,3)
               LOOP END
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at path-tiled.c(168,5) inlined into path-tiled.c(239,3)
      LOOP END
   LOOP END

   LOOP BEGIN at path-tiled.c(167,3) inlined into path-tiled.c(239,3)
   LOOP END

   LOOP BEGIN at path-tiled.c(51,3) inlined into path-tiled.c(239,3)
      remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(52,5) ]
      remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ path-tiled.c(53,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 52 and  line 53
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 53 and  line 52

      LOOP BEGIN at path-tiled.c(52,5) inlined into path-tiled.c(239,3)
         remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at path-tiled.c(98,3) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_free(void *) cannot be vectorized   [ path-tiled.c(98,31) ]
LOOP END

LOOP BEGIN at path-tiled.c(98,3) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_free(void *) cannot be vectorized   [ path-tiled.c(98,31) ]
LOOP END

LOOP BEGIN at path-tiled.c(98,3) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_free(void *) cannot be vectorized   [ path-tiled.c(98,31) ]
LOOP END

LOOP BEGIN at path-tiled.c(98,3) inlined into path-tiled.c(239,3)
   remark #15527: loop was not vectorized: function call to _mm_free(void *) cannot be vectorized   [ path-tiled.c(98,31) ]
LOOP END
===========================================================================
