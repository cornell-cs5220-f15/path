Source Line  Source                                                              CPU Time  CPU Time:Idle  CPU Time:Poor  CPU Time:Ok  CPU Time:Ideal  CPU Time:Over  Spin Time  Spin Time:Imbalance or Serial Spinning (OpenMP)  Spin Time:Lock Contention (OpenMP)  Spin Time:Communication (MPI)  Spin Time:Other  Overhead Time  Overhead Time:Creation (OpenMP)  Overhead Time:Scheduling (OpenMP)  Overhead Time:Reduction (OpenMP)  Overhead Time:Other
-----------  ------------------------------------------------------------------  --------  -------------  -------------  -----------  --------------  -------------  ---------  -----------------------------------------------  ----------------------------------  -----------------------------  ---------------  -------------  -------------------------------  ---------------------------------  --------------------------------  -------------------
36            *                                                                                                                                                                                                                                                                                                                                                                                                                                              
37            * The return value for `square` is true if `l` and `lnew` are                                                                                                                                                                                                                                                                                                                                                                                  
38            * identical, and false otherwise.                                                                                                                                                                                                                                                                                                                                                                                                              
39            */                                                                                                                                                                                                                                                                                                                                                                                                                                             
40                                                                                                                                                                                                                                                                                                                                                                                                                                                           
41           int square(int n,               // Number of nodes                                                                                                                                                                                                                                                                                                                                                                                              
42                      int* restrict l,     // Partial distance at step s                                                                                                                                                                                                                                                                                                                                                                                   
43                      int* restrict lnew)  // Partial distance at step s+1                                                                                                                                                                                                                                                                                                                                                                                 
44           {                                                                                                                                                                                                                                                                                                                                                                                                                                               
45               int done = 1;                                                                                                                                                                                                                                                                                                                                                                                                                               
46               #pragma omp parallel for shared(l, lnew) reduction(&& : done)                                                                                                                                                                                                                                                                                                                                                                               
47               for (int j = 0; j < n; ++j) {                                                                                                                                                                                                                                                                                                                                                                                                               
48                   for (int k = 0; k < n; ++k) {                                 0.009s             0s             0s           0s          0.009s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
49                       int lkj = l[j*n+k];                                       0.030s             0s             0s           0s          0.030s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
50                       for (int i = 0; i < n; ++i) {                             1.044s             0s         0.050s       0.125s          0.870s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
51                           int lik = l[k*n+i];                                   0.060s             0s             0s           0s          0.060s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
52                           int lij = lnew[j*n+i];                                1.025s             0s         0.050s       0.064s          0.911s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
53                           if (lik + lkj < lij) {                                5.560s         0.010s         0.415s       0.747s          4.387s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
54                               lij = lik+lkj;                                                                                                                                                                                                                                                                                                                                                                                                              
55                               done = 0;                                         1.773s             0s         0.106s       0.197s          1.471s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
56                           }                                                                                                                                                                                                                                                                                                                                                                                                                               
57                           lnew[j*n+i] = lij;                                    0.788s             0s         0.085s       0.103s          0.601s             0s          0                                               0s                                  0s                                              0s              0                               0s                                 0s                                0s                   0s
58                       }                                                                                                                                                                                                                                                                                                                                                                                                                                   
59                                                                                                                                                                                                                                                                                                                                                                                                                                                           
60                   }                                                                                                                                                                                                                                                                                                                                                                                                                                       
61               }                                                                                                                                                                                                                                                                                                                                                                                                                                           
62               return done;                                                                                                                                                                                                                                                                                                                                                                                                                                
63           }                                                                                                                                                                                                                                                                                                                                                                                                                                               
64                                                                                                                                                                                                                                                                                                                                                                                                                                                           
65           /**                                                                                                                                                                                                                                                                                                                                                                                                                                             
66            *                                                                                                                                                                                                                                                                                                                                                                                                                                              
67            * The value $l_{ij}^0$ is almost the same as the $(i,j)$ entry of                                                                                                                                                                                                                                                                                                                                                                              
